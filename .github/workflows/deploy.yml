name: .NET 8 CD AzureWebApp

env:
  AZURE_WEBAPP_NAME: Software-Licensing-Module-ERP    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8'                 # set this to the .NET Core version to use

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./src/LicensingERP.sln

      - name: Build
        run: dotnet build --configuration Release ./src/LicensingERP.sln

      - name: Publish
        run: dotnet publish --configuration Release --output ./publish ./src/LicensingERP.sln

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Inject Connection String
        run: |
          jq --arg connString "${{ secrets.MYSQL_DB_CONNECTION_STRING }}" \
             '.ConnectionStrings.MySqlConnection = $connString' \
             ./publish/appsettings.json > ./publish/appsettings.tmp.json \
          && mv ./publish/appsettings.tmp.json ./publish/appsettings.json
        env:
          MYSQL_DB_CONNECTION_STRING: ${{ secrets.MYSQL_DB_CONNECTION_STRING }}
          
      - name: Inject Default Encryption Key
        run: |
          jq --arg encryptionKey "${{ secrets.DEFAULT_ENCRYPTION_KEY }}" \
             '.DefaultEncryptionKey = $encryptionKey' \
             ./publish/appsettings.json > ./publish/appsettings.tmp.json \
          && mv ./publish/appsettings.tmp.json ./publish/appsettings.json
        env:
          DEFAULT_ENCRYPTION_KEY: ${{ secrets.DEFAULT_ENCRYPTION_KEY }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ./publish